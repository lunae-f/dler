# Docker Composeのバージョンを指定
version: '3.8'

# 共通の環境変数を定義するYAMLアンカー
x-common-environment: &common-environment
  environment:
    - REDIS_URL=redis://redis:6379/0

# 起動するサービス（コンテナ）を定義
services:
  # 1. APIサーバー (FastAPI)
  api:
    # buildコンテキストとDockerfileの場所を明示的に指定
    build:
      context: ./yt-dlp
      dockerfile: Dockerfile
    # uvicornの--reloadは開発時には便利だが、本番イメージでは不要
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      # ソースコードの変更を即座に反映させるためのマウント
      - ./yt-dlp:/app
    # 共通の環境変数を継承
    <<: *common-environment
    depends_on:
      redis:
        condition: service_healthy

  # 2. バックグラウンドワーカー (Celery)
  worker:
    # APIサービスと同じイメージを使用するため、ビルドコンテキストを共有
    build:
      context: ./yt-dlp
      dockerfile: Dockerfile
    command: celery -A celery_instance.celery_app worker --loglevel=info
    restart: unless-stopped
    volumes:
      # ソースコードの変更を即座に反映させるためのマウント
      - ./yt-dlp:/app
    # 共通の環境変数を継承
    <<: *common-environment
    depends_on:
      redis:
        condition: service_healthy

  # 3. メッセージブローカー (Redis)
  redis:
    image: "redis:7-alpine"
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

# 永続化に使用する名前付きボリュームを定義
volumes:
  redis_data:
